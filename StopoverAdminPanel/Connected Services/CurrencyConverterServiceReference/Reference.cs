//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StopoverAdminPanel.CurrencyConverterServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CurrencyConverterServiceReference.IServiceCurConverter")]
    public interface IServiceCurConverter {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCurConverter/ConvertCurrency", ReplyAction="http://tempuri.org/IServiceCurConverter/ConvertCurrencyResponse")]
        decimal ConvertCurrency(decimal value, string currencyFrom, string currencyTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCurConverter/ConvertCurrency", ReplyAction="http://tempuri.org/IServiceCurConverter/ConvertCurrencyResponse")]
        System.Threading.Tasks.Task<decimal> ConvertCurrencyAsync(decimal value, string currencyFrom, string currencyTo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceCurConverterChannel : StopoverAdminPanel.CurrencyConverterServiceReference.IServiceCurConverter, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceCurConverterClient : System.ServiceModel.ClientBase<StopoverAdminPanel.CurrencyConverterServiceReference.IServiceCurConverter>, StopoverAdminPanel.CurrencyConverterServiceReference.IServiceCurConverter {
        
        public ServiceCurConverterClient() {
        }
        
        public ServiceCurConverterClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceCurConverterClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceCurConverterClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceCurConverterClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public decimal ConvertCurrency(decimal value, string currencyFrom, string currencyTo) {
            return base.Channel.ConvertCurrency(value, currencyFrom, currencyTo);
        }
        
        public System.Threading.Tasks.Task<decimal> ConvertCurrencyAsync(decimal value, string currencyFrom, string currencyTo) {
            return base.Channel.ConvertCurrencyAsync(value, currencyFrom, currencyTo);
        }
    }
}
